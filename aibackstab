-- made by chatgpt
print("hello world !!!")
-- Services
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- ================== GUI ==================
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BackstabGUI"
ScreenGui.Parent = game:GetService("CoreGui")

-- Main Frame with modern styling
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 280, 0, 320)
Frame.Position = UDim2.new(0.5, -140, 0.5, -160)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui
Frame.Active = true
Frame.Draggable = true

-- Add corner rounding
local FrameCorner = Instance.new("UICorner")
FrameCorner.CornerRadius = UDim.new(0, 12)
FrameCorner.Parent = Frame

-- Add drop shadow effect
local Shadow = Instance.new("Frame")
Shadow.Size = UDim2.new(1, 6, 1, 6)
Shadow.Position = UDim2.new(0, -3, 0, -3)
Shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Shadow.BackgroundTransparency = 0.8
Shadow.BorderSizePixel = 0
Shadow.ZIndex = Frame.ZIndex - 1
Shadow.Parent = Frame

local ShadowCorner = Instance.new("UICorner")
ShadowCorner.CornerRadius = UDim.new(0, 15)
ShadowCorner.Parent = Shadow

-- Header bar
local HeaderBar = Instance.new("Frame")
HeaderBar.Size = UDim2.new(1, 0, 0, 50)
HeaderBar.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
HeaderBar.BorderSizePixel = 0
HeaderBar.Parent = Frame

local HeaderCorner = Instance.new("UICorner")
HeaderCorner.CornerRadius = UDim.new(0, 12)
HeaderCorner.Parent = HeaderBar

-- Fix header corner to only round top
local HeaderBottom = Instance.new("Frame")
HeaderBottom.Size = UDim2.new(1, 0, 0, 12)
HeaderBottom.Position = UDim2.new(0, 0, 1, -12)
HeaderBottom.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
HeaderBottom.BorderSizePixel = 0
HeaderBottom.Parent = HeaderBar

-- Close button with modern styling
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -40, 0, 10)
CloseButton.Text = "√ó"
CloseButton.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
CloseButton.TextColor3 = Color3.new(1, 1, 1)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 18
CloseButton.BorderSizePixel = 0
CloseButton.Parent = HeaderBar

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- Close button hover effect
CloseButton.MouseEnter:Connect(function()
    TweenService:Create(CloseButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(255, 80, 80)}):Play()
end)
CloseButton.MouseLeave:Connect(function()
    TweenService:Create(CloseButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(220, 60, 60)}):Play()
end)

CloseButton.MouseButton1Click:Connect(function()
    -- Smooth close animation
    TweenService:Create(Frame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    }):Play()
    task.wait(0.3)
    ScreenGui:Destroy()
end)

-- Title with icon
local TitleIcon = Instance.new("TextLabel")
TitleIcon.Size = UDim2.new(0, 30, 0, 30)
TitleIcon.Position = UDim2.new(0, 15, 0, 10)
TitleIcon.Text = "üó°Ô∏è"
TitleIcon.BackgroundTransparency = 1
TitleIcon.TextColor3 = Color3.fromRGB(100, 200, 255)
TitleIcon.Font = Enum.Font.Gotham
TitleIcon.TextSize = 16
TitleIcon.Parent = HeaderBar

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(0, 180, 0, 30)
TitleLabel.Position = UDim2.new(0, 50, 0, 10)
TitleLabel.Text = "Auto Backstab"
TitleLabel.BackgroundTransparency = 1
TitleLabel.TextColor3 = Color3.new(1, 1, 1)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextSize = 16
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.Parent = HeaderBar

-- Content container
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -20, 1, -70)
ContentFrame.Position = UDim2.new(0, 10, 0, 60)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = Frame

-- Input section
local InputSection = Instance.new("Frame")
InputSection.Size = UDim2.new(1, 0, 0, 100)
InputSection.BackgroundTransparency = 1
InputSection.Parent = ContentFrame

-- Modern textbox styling function
local function styleTextBox(textbox, placeholder)
    textbox.BackgroundColor3 = Color3.fromRGB(35, 35, 42)
    textbox.BorderSizePixel = 0
    textbox.TextColor3 = Color3.new(1, 1, 1)
    textbox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    textbox.Font = Enum.Font.Gotham
    textbox.TextSize = 14
    textbox.PlaceholderText = placeholder
    textbox.ClearTextOnFocus = false
    textbox.TextXAlignment = Enum.TextXAlignment.Left
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = textbox
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 12)
    padding.PaddingRight = UDim.new(0, 12)
    padding.Parent = textbox
    
    -- Focus effects
    textbox.Focused:Connect(function()
        TweenService:Create(textbox, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(45, 45, 55),
            BorderSizePixel = 2,
            BorderColor3 = Color3.fromRGB(100, 200, 255)
        }):Play()
    end)
    
    textbox.FocusLost:Connect(function()
        TweenService:Create(textbox, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(35, 35, 42),
            BorderSizePixel = 0
        }):Play()
    end)
end

-- Mode textbox
local ModeTextbox = Instance.new("TextBox")
ModeTextbox.Size = UDim2.new(1, 0, 0, 35)
ModeTextbox.Position = UDim2.new(0, 0, 0, 0)
ModeTextbox.Parent = InputSection
styleTextBox(ModeTextbox, "Mode (Normal/Around)")

-- Distance textbox
local DistanceTextbox = Instance.new("TextBox")
DistanceTextbox.Size = UDim2.new(1, 0, 0, 35)
DistanceTextbox.Position = UDim2.new(0, 0, 0, 50)
DistanceTextbox.Text = "10"
DistanceTextbox.Parent = InputSection
styleTextBox(DistanceTextbox, "Distance (studs)")

-- Control section
local ControlSection = Instance.new("Frame")
ControlSection.Size = UDim2.new(1, 0, 0, 80)
ControlSection.Position = UDim2.new(0, 0, 0, 120)
ControlSection.BackgroundTransparency = 1
ControlSection.Parent = ContentFrame

-- Modern toggle button function
local function createToggleButton(text, position, parent)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 120, 0, 35)
    button.Position = position
    button.Text = text
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.GothamSemibold
    button.TextSize = 12
    button.BorderSizePixel = 0
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    -- Hover effects
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(80, 80, 90)}):Play()
    end)
    button.MouseLeave:Connect(function()
        local color = button.Text:find("ON") and Color3.fromRGB(50, 150, 100) or Color3.fromRGB(60, 60, 70)
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = color}):Play()
    end)
    
    return button
end

local ToggleButton = createToggleButton("Auto: OFF", UDim2.new(0, 0, 0, 0), ControlSection)
local NoCooldownButton = createToggleButton("No CD: OFF", UDim2.new(0, 130, 0, 0), ControlSection)

-- Status section
local StatusSection = Instance.new("Frame")
StatusSection.Size = UDim2.new(1, 0, 0, 60)
StatusSection.Position = UDim2.new(0, 0, 0, 210)
StatusSection.BackgroundTransparency = 1
StatusSection.Parent = ContentFrame

-- Status label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(1, 0, 0, 20)
StatusLabel.Position = UDim2.new(0, 0, 0, 0)
StatusLabel.Text = "Ready"
StatusLabel.BackgroundTransparency = 1
StatusLabel.TextColor3 = Color3.fromRGB(100, 200, 100)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 12
StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
StatusLabel.Parent = StatusSection

-- Modern progress bar
local CooldownBarBg = Instance.new("Frame")
CooldownBarBg.Size = UDim2.new(1, 0, 0, 8)
CooldownBarBg.Position = UDim2.new(0, 0, 0, 30)
CooldownBarBg.BackgroundColor3 = Color3.fromRGB(40, 40, 48)
CooldownBarBg.BorderSizePixel = 0
CooldownBarBg.Parent = StatusSection

local CooldownBarCorner = Instance.new("UICorner")
CooldownBarCorner.CornerRadius = UDim.new(0, 4)
CooldownBarCorner.Parent = CooldownBarBg

local CooldownBar = Instance.new("Frame")
CooldownBar.Size = UDim2.new(1, 0, 1, 0)
CooldownBar.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
CooldownBar.BorderSizePixel = 0
CooldownBar.Parent = CooldownBarBg

local CooldownProgressCorner = Instance.new("UICorner")
CooldownProgressCorner.CornerRadius = UDim.new(0, 4)
CooldownProgressCorner.Parent = CooldownBar

-- Add gradient to progress bar
local Gradient = Instance.new("UIGradient")
Gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 200, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 160, 255))
})
Gradient.Parent = CooldownBar

-- Entrance animation
Frame.Size = UDim2.new(0, 0, 0, 0)
Frame.Position = UDim2.new(0.5, 0, 0.5, 0)

TweenService:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, 280, 0, 320),
    Position = UDim2.new(0.5, -140, 0.5, -160)
}):Play()

-- ================== Helper Functions ==================
local function getFirstKiller()
    local killersFolder = workspace.Players:FindFirstChild("Killers")
    if not killersFolder then return nil end
    for _, k in pairs(killersFolder:GetChildren()) do
        if k:FindFirstChild("HumanoidRootPart") then
            return k
        end
    end
    return nil
end

local function fireRemote()
    local args = {"UseActorAbility",{buffer.fromstring("\"Dagger\"")}}
    local remote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
    remote:FireServer(unpack(args))
end

local function getBackPosition(killerHRP)
    return killerHRP.Position - killerHRP.CFrame.LookVector * 4
end

local function isAtBack(myHRP, killerHRP)
    local toMyPos = (myHRP.Position - killerHRP.Position).Unit
    local dot = toMyPos:Dot(killerHRP.CFrame.LookVector)
    return dot < 0
end

local function SmartBackstab(mode)
    local killer = getFirstKiller()
    local character = LocalPlayer.Character
    if not killer or not character then return end
    local myHRP = character:FindFirstChild("HumanoidRootPart")
    local killerHRP = killer:FindFirstChild("HumanoidRootPart")
    if not myHRP or not killerHRP then return end

    local fired = false
    local radius = 4
    local followEndTime = nil

    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not myHRP or not killerHRP then
            connection:Disconnect()
            return
        end

        -- Stop following 0.2 seconds after firing
        if followEndTime and tick() >= followEndTime then
            connection:Disconnect()
            return
        end

        local backPos = getBackPosition(killerHRP)
        local toMyPos = (myHRP.Position - killerHRP.Position).Unit
        local dot = toMyPos:Dot(killerHRP.CFrame.LookVector)
        local targetPos = backPos

        if mode == "Around" and dot > 0 then
            local perp = Vector3.new(-killerHRP.CFrame.LookVector.Z, 0, killerHRP.CFrame.LookVector.X) * radius
            targetPos = backPos + perp
        end

        local tween = TweenService:Create(myHRP, TweenInfo.new(0.1, Enum.EasingStyle.Linear), {CFrame = CFrame.new(targetPos, killerHRP.Position)})
        tween:Play()

        if not fired and isAtBack(myHRP, killerHRP) then
            fired = true
            fireRemote()
            followEndTime = tick() + 0.2 -- Continue following for 0.2 seconds after firing
        end
    end)
end

-- ================== Toggles ==================
local AutoBackstabEnabled = false
local NoCooldownEnabled = false
local cooldown = false
local currentCooldownTime = 0
local cooldownDuration = 30

local function updateToggleButton(button, enabled, text)
    local newText = text .. (enabled and ": ON" or ": OFF")
    button.Text = newText
    local color = enabled and Color3.fromRGB(50, 150, 100) or Color3.fromRGB(60, 60, 70)
    TweenService:Create(button, TweenInfo.new(0.3), {BackgroundColor3 = color}):Play()
end

ToggleButton.MouseButton1Click:Connect(function()
    AutoBackstabEnabled = not AutoBackstabEnabled
    updateToggleButton(ToggleButton, AutoBackstabEnabled, "Auto")
    
    -- Update status
    StatusLabel.Text = AutoBackstabEnabled and "Active - Scanning..." or "Ready"
    StatusLabel.TextColor3 = AutoBackstabEnabled and Color3.fromRGB(255, 200, 100) or Color3.fromRGB(100, 200, 100)
end)

NoCooldownButton.MouseButton1Click:Connect(function()
    NoCooldownEnabled = not NoCooldownEnabled
    updateToggleButton(NoCooldownButton, NoCooldownEnabled, "No CD")
end)

-- ================== Auto Backstab Loop ==================
spawn(function()
    while true do
        task.wait(0.1)
        
        -- Update progress bar with smooth animation
        if cooldown then
            local progress = currentCooldownTime / cooldownDuration
            TweenService:Create(CooldownBar, TweenInfo.new(0.1), {
                Size = UDim2.new(1 - progress, 0, 1, 0)
            }):Play()
            
            -- Update colors during cooldown
            CooldownBar.BackgroundColor3 = Color3.fromRGB(255, 150, 100)
            Gradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 150, 100)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 100, 50))
            })
            
            StatusLabel.Text = string.format("Cooldown: %.1fs", cooldownDuration - currentCooldownTime)
            StatusLabel.TextColor3 = Color3.fromRGB(255, 150, 100)
            currentCooldownTime = currentCooldownTime + 0.1
        else
            CooldownBar.Size = UDim2.new(1, 0, 1, 0)
            CooldownBar.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
            Gradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 200, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 160, 255))
            })
            
            if AutoBackstabEnabled then
                StatusLabel.Text = "Active - Scanning..."
                StatusLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
            else
                StatusLabel.Text = "Ready"
                StatusLabel.TextColor3 = Color3.fromRGB(100, 200, 100)
            end
        end

        if AutoBackstabEnabled and not cooldown then
            local killer = getFirstKiller()
            local character = LocalPlayer.Character
            if killer and character then
                local myHRP = character:FindFirstChild("HumanoidRootPart")
                local killerHRP = killer:FindFirstChild("HumanoidRootPart")
                if myHRP and killerHRP then
                    local dist = tonumber(DistanceTextbox.Text) or 10
                    if (killerHRP.Position - myHRP.Position).Magnitude <= dist then
                        local mode = ModeTextbox.Text or "Normal"
                        SmartBackstab(mode)
                        cooldown = true
                        currentCooldownTime = 0
                        
                        StatusLabel.Text = "Backstab executed!"
                        StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
                        
                        spawn(function()
                            local waitTime = NoCooldownEnabled and 3 or 30
                            cooldownDuration = waitTime
                            task.wait(waitTime)
                            cooldown = false
                        end)
                    end
                end
            end
        end
    end
end)
